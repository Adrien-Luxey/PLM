
***************** BUGS
* The delay slider is not aware of the exercises changes. That is why it
  fails to get the value of the newly selected exercise.
 * le libération du verrou "step-by-step" ne se passe pas bien lors de l'utilisation de "Reset",
   un "Run" remet zéro correctement
 * il faudrait supprimer les \160 qui empêchent la compilation
 * certains tests de countTeen() semblent faux par rapport à l'énoncé
 * certains énoncés extraits javabat sont tronqués

 * la solution à l'exercice IslandMaze est fausse! elle ne trouve pas la solution 
   et ne semble pas faire ce que l'énoncé demande
 * dans lightbot, la dernière instruction exécutée ne déclenche pas de rafraichissement de la vue du monde.
 

***************** BASE

Assez urgent :
 * Quand un exo est fait, il faut passer au suivant de la lesson
 * L'éditeur n'utilise pas les mêmes raccourcis qu'eclipse   
 * Il faut ajouter d'autres mondes parallèles aux labyrinthes pour
   eviter les tricheurs qui résolvent le problème "à la main"
 
D'autres points moins urgents :
 * on pourrait couper l'exercice sur "la chasse à la limace" en deux :
   - écrire hunt() en fournissant la méthode isFacingTrail() sans donner le code celle-ci
   - demander ensuite d'écrire la méthode isFacingTrail()
 * le bouton quitter est mal-placé (un triple clic qui l'application), 
   il serait utile de demander une confirmation avant de quitter l'application.
 * traduire les énoncés extraits de javabat.com
 * Un autre truc sympa serait d'avoir un log sur un compte prof du
   style "[date] untel a passé tel exo".
 * La classe façade au compilateur n'est pas de moi non plus, il
   faudrait la mettre dans un package à part comme l'EditorKit.
 * pas moyen de changer la couleur d'une buggle interactivement
 * Il faudrait masquer les combo de changement de monde et d'entité si y'a rien à changer.

 * dans ExerciseTemplated, les header html (principalement pour les css) HTMLMissionHeader et HTMLTipsHeader
   sont concaténés au texte de la mission ou du type lors du chargement. Du coup, ces headers sont dupliqués
   un nombre considérable de fois en mémoire. Il doit avoir moyen de concaténer ce header au moment de l'affichage
   dans le JEditorPane...

Une série d'idées bêtes :
 * J'aimerais ajouter une sorte de diff entre le monde attendu et le
   monde créé s'il y a un problème, avec des ronds rouges autour des
   cases de la mauvaise couleur, des croix sur les buggles mal
   placées, etc. Il faudrait déjà que check() renvoie une chaine des
   différences à afficher dans un truc "détails" en cas d'échec.
 * les localisations de fichier dans la console devrait être des liens
   qui déplacent l'éditeur.
 * lors d'exécution pas à pas, j'aimerais afficher le contenu des
   variables, mais ça semble très très dur. Si c'est des champs
   d'objets, on peut tenter l'introspection. Sinon, je sais pas.
   Peut-être qu'en convertissant le tout en plugin eclipse on pourrait
   y arriver, mais pas cette année.
 * Changer le JavaEditor pour suivre le point d'exécution, comme c'est
   fait dans lightbot.

 * visualisation interessante pour les algo de tris
   http://corte.si//posts/code/visualisingsorting/index.html

***************** LEÇONS          
Il y a pleins d'idées d'exo sur les pages des gens qui ont
inventé le concept. Par exemple:

http://cs.wellesley.edu/~cs111/fall98/assignments.html

* Une leçon sur les labyrinthes avec A*

***************** MONDES
Micro-mondes pédagogiques
 * Karel the robot (peut-être qu'un chargeur de mondes karel dans les
   buggles suffit)
 * PatchWorld
Pour enfants
 * La course de bateau de gcompris
Ludiques pour programmeurs (nécessitent un mode King of hill?)
 * CodeRuler (stratégie)
 * CodeRobot (combats de robots)
 * CodeRally (courses de voitures)
 * CodeInvaders (combats de vaisseaux spaciaux)
 * MARS (assembleur)
 * Corewars
 